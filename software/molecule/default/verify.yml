---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Get Backup File
      ansible.builtin.stat:
        path: "{{ BORG_BACKUP_REPOSITORY }}"
      register: backup_path

    - name: Check that Backup File Exists
      ansible.builtin.assert:
        that: backup_path.stat.exists

    - name: Get Backups
      ansible.builtin.command:
        cmd: borgmatic list --json
      changed_when: false
      register: backup_list
      become: true

    - name: Check that a Backup was Created
      ansible.builtin.assert:
        that: ((backup_list.stdout | from_json)[0].archives | length) == 1

    - name: Get Docker Version
      community.docker.docker_host_info:
        volumes: yes
        containers: yes
      register: docker_host_info
      become: true

    - name: Get List of Anonymous volumes
      ansible.builtin.set_fact:
        docker_anonymous_volumes: >-
          {{
          docker_host_info.volumes
          | map(attribute='Name')
          | select('match', '^[0-9a-f]{64}$')
          }}

    - name: Verify that no Anonymous Volumes exist
      ansible.builtin.assert:
        that: not docker_anonymous_volumes
        fail_msg: >-
          Expected no anonymous volumes, found:
          {{ docker_anonymous_volumes }}

    - name: Old Applications get Deleted
      ansible.builtin.assert:
        that: >-
          'traefik/whoami'
          not in
          (docker_host_info.containers | map(attribute='Image'))

    - name: Get Docker Volume
      ansible.builtin.stat:
        path: "{{ data_directory }}/docker/volumes/traefik_letsencrypt"
      register: docker_volume
      become: true

    - name: Verify Docker Volume Location
      ansible.builtin.assert:
        that: docker_volume.stat.exists

    - name: Get docker-compose Services
      ansible.builtin.stat:
        path: /srv/traefik
      register: stat_result

    - name: Verify docker-compose Services
      ansible.builtin.assert:
        that: stat_result.stat.exists

    - name: Get Authelia Reverse Proxy Response
      ansible.builtin.uri:
        url: https://localhost/
        return_content: yes
        validate_certs: no
        headers:
          Host: auth.me.localhost
      register: auth_response

    - name: Verify Authelia Reverse Proxy Response
      ansible.builtin.assert:
        that: >-
          'content="Authelia' in auth_response.content

    - name: Verify HTTP Transports
      ansible.builtin.command:
        cmd: curl --silent {{ item[0] }} {{ item[1] }} http://auth.me.localhost/
      changed_when: false
      loop: |
        {{
          [
            "--http1.0",
            "--http1.1",
            "--http2"
          ]
          | product([
            "--ipv4",
            "--ipv6"
          ])
        }}
      tags:
        - skip_ansible_lint

    - name: Get Test Docker Compose Application
      ansible.builtin.stat:
        path: /srv/test_app
      register: test_compose_app

    - name: Test Docker Compose Application
      ansible.builtin.assert:
        that: not test_compose_app.stat.exists
