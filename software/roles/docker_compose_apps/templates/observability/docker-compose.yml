version: "3"
services:
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml:ro
      - grafana_data:/var/lib/grafana
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      JAEGER_AGENT_HOST: otel-collector
      JAEGER_ENDPOINT: http://otel-collector:14268/api/traces
      JAEGER_TAGS: service.name=grafana
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: "1"
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.$BASE_DOMAIN`)
      - traefik.http.routers.grafana.entrypoints=https
      - traefik.http.routers.grafana.tls.certResolver=letsencrypt
      - traefik.http.routers.grafana.middlewares=authelia@docker
    networks:
      - internal
      - rproxy

  tempo:
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./config/tempo/tempo.yaml:/etc/tempo.yaml:ro
      - tempo_data:/tmp/tempo
    read_only: true
    environment:
      JAEGER_AGENT_HOST: otel-collector
      JAEGER_ENDPOINT: http://otel-collector:14268/api/traces
      JAEGER_TAGS: service.name=tempo
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: "1"
    networks:
      - internal

  loki:
    image: grafana/loki:latest
    command: [ "-config.file=/etc/loki/local-config.yaml" ]
    read_only: true
    volumes:
      - loki_data:/loki
    environment:
      JAEGER_AGENT_HOST: otel-collector
      JAEGER_ENDPOINT: http://otel-collector:14268/api/traces
      JAEGER_TAGS: service.name=loki
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: "1"
    networks:
      - internal

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    read_only: true
    volumes:
      - ./config/prometheus/prometheus.yaml:/etc/prometheus.yaml:ro
      - prometheus_data:/prometheus
    networks:
      - internal

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: [ "--config=/etc/otel-collector.yaml" ]
    read_only: true
    volumes:
      - ./config/otel-collector/otel-collector.yaml:/etc/otel-collector.yaml:ro
    networks:
      - internal
      - observability

  promtail:
    image: grafana/promtail:latest
    command: -config.file=/etc/promtail/config.yaml
    read_only: true
    volumes:
      - ./config/promtail/promtail.yaml:/etc/promtail/config.yaml:ro
      - /var/lib/docker/containers/:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
      - promtail_positions:/var/promtail
    environment:
      JAEGER_AGENT_HOST: otel-collector
      JAEGER_ENDPOINT: http://otel-collector:14268/api/traces
      JAEGER_TAGS: service.name=promtail
      JAEGER_SAMPLER_TYPE: const
      JAEGER_SAMPLER_PARAM: "1"
    networks:
      - internal

volumes:
  grafana_data:
  prometheus_data:
  loki_data:
  tempo_data:
  promtail_positions:

networks:
  internal:
  observability:
    name: observability
  rproxy:
    name: rproxy