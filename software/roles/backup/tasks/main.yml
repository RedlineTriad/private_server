---
- name: Make it so we can backup to localhost
  ansible.builtin.copy:
    src: ~/.ssh/id_ed25519.pub
    dest: ~/.ssh/authorized_keys
    mode: 0600
    remote_src: yes

- name: Get localhost fingerprint
  ansible.builtin.command:
    cmd: ssh-keyscan -t ed25519 localhost
  changed_when: false
  register: localhost_fingerprint

- name: Install localhost fingerprint
  ansible.builtin.lineinfile:
    line: "{{ localhost_fingerprint.stdout }}"
    dest: ~/.ssh/known_hosts
    mode: 0600
    create: true

- name: Setup Automatic Backup
  ansible.builtin.include_role:
    name: m3nu.ansible_role_borgbackup
  vars:
    borg_encryption_passphrase: "{{ BORG_BACKUP_ENCRYPTION_PASS }}"
    borg_repository: "{{ BORG_BACKUP_REPOSITORY }}"
    borg_source_directories:
      - "{{ data_directory }}"
    borg_retention_policy:
      keep_hourly: 3
      keep_daily: 7
      keep_weekly: 4
      keep_monthly: 6
    borgmatic_timer: systemd
    borgmatic_timer_hour: '*'
    borgmatic_timer_minute: 0

- name: Check if repository already exists
  ansible.builtin.command:
    cmd: borgmatic rlist
  changed_when: false
  failed_when: not repo_list.rc in [0, 1]
  register: repo_list

- name: Init Repository
  ansible.builtin.command:
    cmd: borgmatic init --encryption repokey-blake2
  changed_when: true
  when: >
    "Repository " ~ BORG_BACKUP_REPOSITORY ~ " does not exist."
    in
    repo_list.stdout

- name: Enable Backup Timer
  ansible.builtin.systemd:
    name: borgmatic.timer
    state: started
    enabled: yes
    daemon_reload: true
