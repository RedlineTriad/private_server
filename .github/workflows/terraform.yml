name: 'Terraform'

on:
  push:
    branches:
    - "master"
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    environment: production
    permissions:
      pull-requests: write

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: infra

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
          
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
          
      - name: Terraform Init
        id: init
        run: terraform init
          
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
          
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        env:
          TF_VAR_hcloud_token: ${{ secrets.TF_VAR_HCLOUD_TOKEN }}
        continue-on-error: true
          
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
        
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
        
            </details>
        
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
